// BASE COMMANDS

DEFINE_INSTR
(
    EXIT, 0x0, 0x0,
    {
        return;
    }
)

// ARITHMETIC COMMANDS

DEFINE_INSTR
(
    ADD, 0x1, 0x0,
    {
        RD_I_ASSIGN(RS1_I() + RS2_I());
    }
)

DEFINE_INSTR
(
    SUB, 0x2, 0x0,
    {
        RD_I_ASSIGN(RS1_I() - RS2_I());
    }
)

DEFINE_INSTR
(
    MUL, 0x3, 0x0,
    {
        RD_I_ASSIGN(RS1_I() * RS2_I());
    }
)
DEFINE_INSTR
(
    DIV, 0x4, 0x0,
    {
        RD_I_ASSIGN(RS1_I() / RS2_I());
    }
)

DEFINE_INSTR
(
    ADDF, 0x5, 0x0,
    {
        RD_F_ASSIGN(RS1_F() + RS2_F());
    }
)

DEFINE_INSTR
(
    SUBF, 0x6, 0x0,
    {
        RD_F_ASSIGN(RS1_F() - RS2_F());
    }
)

DEFINE_INSTR
(
    MULF, 0x7, 0x0,
    {
        RD_F_ASSIGN(RS1_F() * RS2_F());
    }
)

DEFINE_INSTR
(
    DIVF, 0x8, 0x0,
    {
        RD_F_ASSIGN(RS1_F() / RS2_F());
    }
)

DEFINE_INSTR
(
    AND, 0x9, 0x0,
    {
        RD_I_ASSIGN(RS1_I() & RS2_I());
    }
)

DEFINE_INSTR
(
    OR, 0xa, 0x0,
    {
        RD_I_ASSIGN(RS1_I() | RS2_I());
    }
)

DEFINE_INSTR
(
    XOR, 0xb, 0x0,
    {
        RD_I_ASSIGN(RS1_I() ^ RS2_I());
    }
)

// MOV COMMANDS

DEFINE_INSTR
(
    MOV, 0xc, 0x0,
    {
        RD_I_ASSIGN(RS1_I());
    }
)

DEFINE_INSTR
(
    MOVIF, 0xd, 0x8,
    {
        RD_I_ASSIGN(IMM_I());
    }
)
// COMPARISON COMMANDS

DEFINE_INSTR
(
    SLTI, 0xe, 0x0,
    {
        RD_I_ASSIGN(RS1_I() < RS2_I());
    }
)

DEFINE_INSTR
(
    SMEI, 0xf, 0x0,
    {
        RD_I_ASSIGN(RS1_I() >= RS2_I());
    }
)

DEFINE_INSTR
(
    SLTF, 0x10, 0x0,
    {
        RD_I_ASSIGN(RS1_F() < RS2_F());
    }
)

DEFINE_INSTR
(
    SMEF, 0x11, 0x0,
    {
        RD_I_ASSIGN(RS1_F() >= RS2_F());
    }
)

DEFINE_INSTR
(
    EQI, 0x12, 0x0,
    {
        RD_I_ASSIGN(RS1_I() == RS2_I());
    }
)

DEFINE_INSTR
(
    NEQI, 0x13, 0x0,
    {
        RD_I_ASSIGN(RS1_I() != RS2_I());
    }
)

DEFINE_INSTR
(
    EQF, 0x14, 0x0,
    {
        RD_I_ASSIGN(RS1_F() == RS2_F());
    }
)

DEFINE_INSTR
(
    NEQF, 0x15, 0x0,
    {
        RD_I_ASSIGN(RS1_F() != RS2_F());
    }
)

DEFINE_INSTR
(
    CONVIF, 0x16, 0x0,
    {
        RD_F_ASSIGN(static_cast<double>(RS1_I()));
    }
)

DEFINE_INSTR
(
    CONVFI, 0x17, 0x0,
    {
        RD_I_ASSIGN(static_cast<int64_t>(RS1_F()));
    }
)

DEFINE_INSTR
(
    PRINTI, 0x18, 0x0,
    {
        printf("%ld\n", RS1_I());
    }
)

DEFINE_INSTR
(
    PRINTF, 0x19, 0x0,
    {
        printf("%lf\n", RS1_F());
    }
)

DEFINE_INSTR
(
    SCANI, 0x1a, 0x0,
    {
        int64_t __tmp {0};
        scanf("%ld", &__tmp);
        RD_I_ASSIGN(__tmp);
    }
)

DEFINE_INSTR
(
    SCANF, 0x1b, 0x0,
    {
        double __tmp {0.0};
        scanf("%lf", &__tmp);
        RD_F_ASSIGN(__tmp);
    }
)

DEFINE_INSTR
(
    SIN, 0x1c, 0x0,
    {
        RD_F_ASSIGN(std::sin(RS1_F()));
    }
)

DEFINE_INSTR
(
    COS, 0x1d, 0x0,
    {
        RD_F_ASSIGN(std::cos(RS1_F()));
    }
)

DEFINE_INSTR
(
    POWER, 0x1e, 0x0,
    {
        RD_F_ASSIGN(std::pow(RS1_F(), RS2_F()));
    }
)
